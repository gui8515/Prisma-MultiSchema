// import { DriverLogsFilesBankStatement,DriverLogsFilesBusinessInsurence,DriverLogsFilesDrivingLicense,DriverLogsFilesPassport,DriverLogsFilesPhotoId,DriverLogsFilesVisa} from "DriverLogsFiles";

type DriverLogsCancelled {
  today Int?
  total Int
}


type DriverLogsCoverage {
  id           String?                  @map("_id") @db.ObjectId
  center       DriverLogsCoverageCenter
  radius_miles Int?
  range_miles  Int?
  type         String?
}

type DriverLogsCoverageCenter {
  coordinates Float[]
  lat         Float?
  lng         Float?
  type        String?
}


type DriverLogsCurrent {
  id          String? @map("_id") @db.ObjectId
  coordinates Float[]
  type        String
}


type DriverLogsDelivery {
  today Int
  total Int
}

type DriverLogsFiles {
  bank_statement     DriverLogsFilesBankStatement?
  business_insurence DriverLogsFilesBusinessInsurence
  driving_license    DriverLogsFilesDrivingLicense
  passport           DriverLogsFilesPassport?
  photo_id           DriverLogsFilesPhotoId?
  visa               DriverLogsFilesVisa?
}

type DriverLogsLocations {
  lat Float
  lng Float
}


type DriverLogsLogs {
  end_time   String
  start_time String
}


type DriverLogsRejected {
  today Int
  total Int
}


type DriverLogsReview {
  /// Could not determine type: the field only had null or empty values in the sample set.
  reviews Json?
  total   Int
}

type DriverLogsShift {
  date String
  id   String
}

type DriverLogsTermscondition {
  id         String  @map("_id") @db.ObjectId
  created_at String
  data       String
  signature  String?
}